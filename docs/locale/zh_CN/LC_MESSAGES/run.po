msgid ""
msgstr ""
"Project-Id-Version: remix-translation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-12 15:08-0400\n"
"PO-Revision-Date: 2023-10-17 13:52\n"
"Last-Translator: \n"
"Language-Team: Chinese Simplified\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: remix-translation\n"
"X-Crowdin-Project-ID: 431830\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /[ethereum.remix-ide] master/docs/_build/gettext/run.pot\n"
"X-Crowdin-File-ID: 6490\n"
"Language: zh_CN\n"

#: ../../run.md:1
msgid "Deploy & Run"
msgstr "部署 & 运行"

#: ../../run.md:4
msgid "![](images/a-run-icon.png) The Deploy & Run module is for sending transactions to the current **Environment**."
msgstr "![](images/a-run-icon.png) 部署与运行模块是为了将交易发送到当前的**环境**中。"

#: ../../run.md:6
msgid "For deploying, you need to have a contract compiled.  To check that there is a compiled contract, find the <b>CONTRACT</b> select box (which is under the VALUE input field), you can use this module."
msgstr "为了部署，你需要有一个已编译的合同。  要检查是否有一个已编译的合同，找到 <b>CONTRACT</b> 选择框（它在VALUE输入字段下），你可以使用这个模块。"

#: ../../run.md:8
msgid "![](images/a-contract.png)"
msgstr "![](images/a-contract.png)"

#: ../../run.md:10
msgid "If nothing is there, you need to compile a file. If you do not see the contract you want, you need to select a contract in the editor to make it active."
msgstr "如果什么都没有，你需要编译一个文件。如果你没有看到你想要的合约，你需要在编辑器中选择一个合约，使其活跃起来。"

#: ../../run.md:12
msgid "Environment"
msgstr "环境"

#: ../../run.md:15
msgid "`Remix VM (Merge)` : Connects to a sandbox blockchain in the browser. The Remix VM (previously called JavaScript VM) is its own \"blockchain\" and on each reload the old chain will be cleared and a new blockchain will be started. **The old one will not be saved**.  Merge refers to the fork of Ethereum when the Merge occurred. This fork is also known as the **Paris** fork."
msgstr "`Remix VM (Merge)`：连接到浏览器中的一个沙盒区块链。Remix VM（以前称为JavaScript VM）是它自己的 \"区块链\"，在每次重新加载时，旧的链将被清除，新的区块链将被启动。**旧的将不会被保存**。  合并指的是合并发生时以太坊的分叉。这个分叉也被称为**巴黎**分叉。"

#: ../../run.md:17
msgid "`Remix VM (London)` : Same as above except this chain is using the London fork of Ethereum."
msgstr "`Remix VM (London)`：与上述相同，只是该链使用的是Ethereum的伦敦分叉。"

#: ../../run.md:19
msgid "`Remix VM (Berlin)` : Same as above except this chain is using the Berlin fork of Ethereum."
msgstr "`Remix VM (Berlin)` : 和上面一样，只不过这里用的是以太坊的柏林分叉。"

#: ../../run.md:21
msgid "`Remix VM - Mainnet fork` : This will fork the Ethereum mainnet and will load it into the Remix VM.  It is useful for developing contracts that need to access deployed mainnet contracts. (See below for more info about Forking)"
msgstr "`Remix VM - Mainnet fork`：这将分叉Ethereum主网并将其加载到Remix VM中。  这对于开发需要访问已部署的主网合约的合约很有用。(关于分叉的更多信息，见下文）"

#: ../../run.md:23
msgid "`Remix VM - Goerli fork` : Same as above except this forks the Goerli testnet. (See below for more info about Forking)"
msgstr "`Remix VM - Goerli fork`：与上述相同，只是它分叉了Goerli测试网。(关于分叉的更多信息见下文）"

#: ../../run.md:25
msgid "`Remix VM - Sepolia fork` : Same as above except this forks the Sepolia testnet. (See below for more info about Forking)"
msgstr "`Remix VM - Sepolia fork`：与上述相同，只是它分叉了Sepolia的测试网。(关于分叉的更多信息，见下文)"

#: ../../run.md:27
msgid "`Remix VM - Custom fork` : Forks a chain, at block number, and in an EVM version of your choice. (See below for more info about Forking)"
msgstr "`Remix VM - Custom fork`：在您选择的EVM版本中，以区块号分叉一条链。(关于分叉的更多信息见下文）"

#: ../../run.md:29
msgid "`Injected Provider - provider name`: Connects Remix to an injected web3 provider. The most common injected provider is `Metamask`."
msgstr "`Injected Provider - provider name`：将Remix连接到一个注入的web3提供者。最常见的注入提供者是 \"Metamask\"。"

#: ../../run.md:31
msgid "`Custom - External HTTP Provider`: Remix will connect to a remote node. You will need to provide the URL to the selected provider: geth, parity or any Ethereum client. This was previously called **Web3 Provider**. (See below for more info about External HTTP Provider)"
msgstr "`Custom- External HTTP Provider`：Remix将连接到一个远程节点。您需要提供所选提供者的URL：geth、parity或任何Ethereum客户端。这在以前被称为**Web3 Provider**。(关于外部HTTP提供方的更多信息，见下文）"

#: ../../run.md:33
msgid "`Dev - Hardhat Provider`: Connects Remix to a local Hardhat test chain."
msgstr "`Dev - Hardhat Provider`：将Remix连接到本地Hardhat测试链。"

#: ../../run.md:35
msgid "`Dev - Ganache Provider`: Connects Remix to a local Truffle Ganache test chain."
msgstr "`Dev - Ganache Provider`：将Remix连接到本地Truffle Ganache测试链。"

#: ../../run.md:37
msgid "`Dev - Foundry Provider`: Connects Remix to a local Foundry Anvil test chain."
msgstr "`Dev - Foundry Provider`：将Remix连接到本地Foundry Anvil测试链。"

#: ../../run.md:39
msgid "`L2 - Optimism Provider`: Connects Remix to an Injected Provider (usually Metamask) with the settings for the mainnet of Optimism."
msgstr "`L2 - Optimism Provider`：将Remix连接到一个注入的提供者（通常是Metamask），并为Optimism的主网设置。"

#: ../../run.md:41
msgid "`L2 - Arbitrum One Provider`: Connects Remix to an Injected Provider (usually Metamask) with the settings for the Arbitrum One network."
msgstr "`L2 - Arbitrum One Provider`：将Remix连接到具有Arbitrum One网络设置的Injected Provider（通常是Metamask）。"

#: ../../run.md:43
msgid "`WalletConnect`: Connects Remix to a wallet on a mobile device."
msgstr "`WalletConnect`：将Remix连接到移动设备上的钱包。"

#: ../../run.md:45
msgid "Forking chains in Remix"
msgstr "Remix中的分叉链"

#: ../../run.md:47
msgid "Forking is a great technique for developing a contract that interacts with deployed contracts on a specific chain. By bringing in a chain to the Remix VM, you'll have the 10 accounts loaded with 100ETH."
msgstr "分叉是一种很好的技术，可以开发一个与特定链上部署的合约互动的合约。将一个链引入Remix VM，你会有10个账户加载100ETH。"

#: ../../run.md:49
msgid "Careful though, if you refresh the browser, you’ll lose the forked chain."
msgstr "不过要小心，如果你刷新浏览器，你会失去分叉的链。"

#: ../../run.md:51
msgid "Custom Fork"
msgstr "定制Fork"

#: ../../run.md:52
msgid "The Custom fork option allows you to specify a chain's RPC server, a block number, and an EVM version."
msgstr "自定义分叉选项允许你指定一个链的RPC服务器，一个区块号码和一个EVM版本。"

#: ../../run.md:54
msgid "![](images/a-custom-fork.png)"
msgstr "![](images/a-custom-fork.png)"

#: ../../run.md:56
msgid "You can get the **Node URL** from chainlist.org. If the chain does not load, you may need to choose a different RPC server. You will also need to choose an EVM version appropriate to the block number. So, if you choose a very low block number, the EVM with the Merge “flavor” won’t work because this version of the EVM came out later."
msgstr "你可以从chainlist.org获得**节点的URL**。如果链不加载，你可能需要选择一个不同的RPC服务器。你还需要选择一个与区块编号相适应的EVM版本。因此，如果你选择了一个非常低的区块号码，带有Merge \"味道 \"的EVM将无法工作，因为这个版本的EVM是后来才出现的。"

#: ../../run.md:58
msgid "More about External HTTP Provider"
msgstr "更多关于外部 HTTP Provider"

#: ../../run.md:60
msgid "If you are using Geth & https://remix.ethereum.org, please use the following Geth command to allow requests from Remix:"
msgstr "如果您使用 Geth 和 https://remix.ethereum.org ，请使用以下命令来启动 Geth ，这样 Geth 就可以接受来自 Remix 的跨域请求："

#: ../../run.md:66
msgid "Also see [Geth Docs about the http server](https://geth.ethereum.org/docs/rpc/server)"
msgstr "请参阅 [Geth 文档中关于 http 服务的内容](https://geth.ethereum.org/docs/rpc/server)"

#: ../../run.md:68
msgid "To run Remix using  https://remix.ethereum.org & a local test node, use this Geth command:"
msgstr "要使用 https://remix.ethereum.org 和本地测试节点来运行 Remix ，请使用以下 Geth 命令："

#: ../../run.md:74
msgid "If you are using remix-alpha or a local version of remix - replace the url of the --http.corsdomain with the url of Remix that you are using."
msgstr "如果你用的是 remix-alpha 或者本地版本的 remix — 把 --http.corsdomain 后面的 url 换成你正在使用的 Remix 的 url 。"

#: ../../run.md:76
msgid "To run Remix Desktop & a local test node, use this Geth command:"
msgstr "要运行 Remix Desktop 和本地测试节点，请使用以下 Geth 命令："

#: ../../run.md:82
msgid "Also see [Geth Docs on Dev mode](https://geth.ethereum.org/getting-started/dev-mode)"
msgstr "请参阅 [Geth 文档中关于开发模式的内容](https://geth.ethereum.org/getting-started/dev-mode)"

#: ../../run.md:84
msgid "The Web3 Provider Endpoint for a local node is **http://localhost:8545**"
msgstr "本地节点的 Web3 Provider Endpoint 是 **http://localhost:8545**"

#: ../../run.md:88
msgid "**WARNING:** Don't get lazy. It is a bad idea to use the Geth flag <b>--http.corsdomain</b> with a wildcard: `--http.corsdomain *`"
msgstr "**提醒:** 别偷懒。有一种很不明智的做法，就是在 Geth 参数标识 <b>--http.corsdomain</b> 后面跟一个通配符: `--http.corsdomain *`"

#: ../../run.md:90
msgid "If you put the wildcard `*`, it means everyone can request the node. Whereas, if you put a URL, it restricts the urls to just that one - e.g.  `--http.corsdomain 'https://remix-alpha.ethereum.org'`"
msgstr "如果你是用通配符 `*` ，这就意味着所有人都可以访问这个节点。但是，如果你是用 URL ，那么允许跨域访问的 url 就只有这一个 — 示例  `--http.corsdomain 'https://remix-alpha.ethereum.org'`"

#: ../../run.md:92
msgid "Only use `--http.corsdomain *` when using a **test chain** AND using only **test accounts**. For real accounts or on the mainchain **specify the url**."
msgstr "只在使用**测试链**或**测试账户**时使用 `--http.corsdomain *` 。如果使用真实账户或在主链上，**请指明 url** 。"

#: ../../run.md:97
msgid "Account:"
msgstr "账户："

#: ../../run.md:99
msgid "Account: the list of accounts associated with the current  environment (and their associated balances).  On the Remix VM, you have a choice of 5 accounts.  If using Injected Web3 with MetaMask, you need to change the account in MetaMask."
msgstr "账户：与当前环境关联的账户列表(及其关联的余额)。 在 Remix VM 上，您可以选择 5 个账户。 如果通过 MetaMask 来使用 Injected Web3 ，那么更改账户需要在 MetaMask 中操作。"

#: ../../run.md:102
msgid "Gas Limit:"
msgstr "Gas 限制："

#: ../../run.md:104
msgid "This sets the maximum amount of gas that will be allowed for all the  transactions created in Remix."
msgstr "这里设置了在 Remix 中创建的所有交易所允许的最大 gas 量。"

#: ../../run.md:107
msgid "Value:"
msgstr "以太币："

#: ../../run.md:109
msgid "This sets the amount of ETH, WEI, GWEI etc that is sent to a contract or a payable function. <br>  **Note:** payable functions have a red button."
msgstr "这里设置了发送到一个合约或者 payable 函数的以太币数量，单位可以是 ETH、WEI、GWEI 等。<br> **注意:** payable 函数有一个红色按钮。"

#: ../../run.md:112
msgid "The **Value** field is always reset to 0 after each transaction execution. <br> The **Value** field is **NOT** for gas."
msgstr "每笔交易执行后，这个 **Value** 字段总是会被重置为0。<br> 这个 **Value** 字段**不是**用作 gas 消耗的。"

#: ../../run.md:115
msgid "![](images/a-Runtab-deploy-atAddress.png)"
msgstr "![](images/a-Runtab-deploy-atAddress.png)"

#: ../../run.md:117
msgid "Deploy & AtAddress"
msgstr "部署 & AtAddress"

#: ../../run.md:120
msgid "In the image above, the select box is set to **Ballot**.  This select box will contain the list of compiled contracts."
msgstr "在上图中，下拉选框选中了 **Ballot**。 这个下拉选框会包含已编译合约的列表。"

#: ../../run.md:122
msgid "`Deploy` sends a transaction that deploys the selected contract. When the transaction is mined, the newly created instance will be added (this might take several seconds). <br>**Note:** If the contract's constructor function has parameters, you need to specify them."
msgstr "`部署`会发送一笔部署当前选中合约的交易。当这笔交易被打包时，新创建的实例将被添加已部署的合约列表中（这可能需要几秒钟）。<br> **注意:** 如果合约的构造函数有参数，您需要指定它们。"

#: ../../run.md:126
msgid "`At Address` is used to access a contract that has already been deployed. Because the contract is already deployed, accessing a contract with **AtAddress** does not cost gas."
msgstr "`At Address` 是用来访问已经部署的合约。因为合约已经部署，通过 **AtAddress** 来访问合约不需要消耗 gas 。"

#: ../../run.md:128
msgid "**Note:** When using AtAddress, be sure you trust the contract at that address."
msgstr "**注意:** 当使用 AtAddress 时，请您确保这个地址的合约是可信的。"

#: ../../run.md:130
msgid "To use **AtAddress**, you need to have the **source code** or **ABI** of the deployed contract  **in the active tab** of the editor.  When using the source code, it must be compiled with the same compilation settings as the deployed contract that you are trying to access."
msgstr "要使用 **AtAddress **，您需要在编辑器**处于选中状态时**有已部署合约的**源代码**或**ABI**。当使用源代码时，它必须使用与您尝试访问的已部署合约相同的编译设置进行编译。"

#: ../../run.md:132
msgid "Using the ABI with AtAddress"
msgstr "通过 ABI 来使用 AtAddress"

#: ../../run.md:135
msgid "The **ABI** is a JSON array which describes the contract's interface."
msgstr "**ABI** 是一个描述合约接口的 JSON 数组。"

#: ../../run.md:137
msgid "To interact with a contract using the ABI, create a new file in Remix with extension ***.abi** and copy the ABI content to it."
msgstr "通过 ABI 来合约交互的话，需要在 Remix 中创建一个 ***.abi** 后缀的新文件，然后把 ABI 信息复制进去。"

#: ../../run.md:140
msgid "Make sure this file is the active tab in the editor. Then, in the field next to `At Address`, input the contract's address and click on `At Address`. If successful, an instance of the contract will appear below - in the list of **Deployed Contracts**."
msgstr "确保这个文件在编辑器中处于选中状态。然后，在 `At Address` 旁边的输入框中，输入合约地址，再点击 `At Address` 。如果成功的话，下面会出现这个合约的实例 - 在**已部署合约列表**中。"

#: ../../run.md:142
msgid "**Note:** To generate the ABI, in the Solidity compiler, after a contract is compiled, click on the **Compilation Details** button.  A modal will come up with that contains the ABI among other info."
msgstr "**注意:** 想要 ABI 的话，在 Solidity 编译器中，当一个合约编译后，点击**编译详情**按钮。就会弹出一个对话框，里面包含了 ABI 还有其他信息。"

#: ../../run.md:144
msgid "Pending Instances"
msgstr "Pending 实例"

#: ../../run.md:147
msgid "Validating a transaction takes several seconds. During this time, the GUI shows it in a pending mode. When the transaction is mined, the number of pending transactions is updated and the transaction is added to the log ([see terminal](terminal.html))."
msgstr "验证交易需要几秒钟。在此期间， GUI 会将这笔显示为 Pending 状态。 当交易被打包时， Pending 交易的数量被更新，并且交易被添加到日志中([见终端](terminal.html))。"

#: ../../run.md:152
msgid "Using the Recorder"
msgstr "使用记录器"

#: ../../run.md:155
msgid "The Recorder is a tool used to save a bunch of transactions in a JSON file and re-run them later either in the same environment or in another."
msgstr "Recorder 是一种工具，用于将一堆交易保存在一个 JSON 文件中，然后在同一环境或另一个环境中重新运行它们。"

#: ../../run.md:158
msgid "Saving to the JSON file (by default it's called scenario.json) allows one to easily check the transaction list, tweak input parameters, change linked library, etc..."
msgstr "将数据保存到 JSON 文件 (默认命名为 scenario.json) 可以让您很方便地检查交易列表、调整输入参数、更改链接库等..."

#: ../../run.md:160
msgid "There are many use cases for the recorder."
msgstr "记录器有很多用例。"

#: ../../run.md:162
msgid "For instance:"
msgstr "例如："

#: ../../run.md:164
msgid "After having coded and tested contracts in a constrained environment (like the Remix VM), you could then change the environment and redeploy it to a more realistic environment like a public testnet or to a Geth node. By using the generated **scenario.json** file, you will be using all the same settings that you used in the Remix VM.  And this means that you won't need to click the interface 100 times or whatever to get the state that you achieved originally.  So the recorder could be a tool to protect your sanity."
msgstr "在受限环境(如 Remix VM)中对合约进行编码和测试后，您可以更改环境并将其重新部署到更真实的环境中，例如公共测试网或 Geth 节点。 通过事先生成好的 **scenario.json** 文件，您使用的所有设置都可以和在 Remix VM 中使用时保持一致。 这意味着您无需在界面上点击 100 次或其他任何操作即可获得您之前达到的状态。 所以记录器这个工具可以让你保持淡定。"

#: ../../run.md:167
msgid "You can also change the settings in the scenario.json file to customize the playback."
msgstr "您还可以更改 scenario.json 文件中的设置来自定义交易回放。"

#: ../../run.md:169
msgid "Deploying contract does often require more than creating one transaction and so the recorder will automate this deployment."
msgstr "部署合约通常需要的不仅仅是创建一个交易，因此记录器将自动执行这个部署流程。"

#: ../../run.md:172
msgid "Working in a dev environment often requires setting up the state in the first place."
msgstr "在开发环境中工作通常需要先设置状态。"

#: ../../run.md:175
msgid "![](images/a-recorder.png)"
msgstr "![](images/a-recorder.png)"

#: ../../run.md:177
msgid "When checked, the option `Run transactions using the last compilation result` allows you to develop a contract and easily set the state using **the latest compiled versions of the contracts.**"
msgstr "选中 `使用最新的编译结果运行交易` 这个选项后，您可以在开发合约的同时很方便地使用**最新的编译结果**设置初始状态。"

#: ../../run.md:179
msgid "scenario.json"
msgstr "scenario.json"

#: ../../run.md:180
msgid "To create this file in the recorder, you first of course need to have run some transactions.  In the image above - it has a `0` next to **Transactions Recorded**.  So this isn't the right moment to save transactions because - well because there aren't any.  Each time you make a transaction, that number will increment.  Then when you are ready, click the floppy disk icon and the scenario.json file will be created."
msgstr "要在记录器中创建这个文件，您当然需要先运行一些交易。 在上图中 - **已记录交易**旁边的数字是 `0`。 所以现在保存交易还不是时候 — 因为没有交易。 每次您发一笔交易，这个数字都会增加。 然后，当你把该发的交易都发完了以后，点击 保存 按钮，就会创建 scenario.json 文件。"

#: ../../run.md:182
msgid "The JSON file below is an example of the scenario.json file."
msgstr "下面的 JSON 文件是 scenario.json 文件的一个示例。"

#: ../../run.md:184
msgid "In it, 3 transactions are executed:"
msgstr "在其中，执行了 3 笔交易："

#: ../../run.md:186
msgid "The first corresponds to the deployment of the lib `testLib`."
msgstr "第一笔交易对应 `testLib` 库的部署。"

#: ../../run.md:188
msgid "The second corresponds to the deployment of the contract `test` with the first parameter of the constructor set to 11. That contract depends on a library. The linkage is done using the property `linkReferences`. In that case we use the address of the previously created library : `created{1512830014773}`. The number is the id (timestamp) of the transaction that led to the creation of the library."
msgstr "第二个笔交易对应 `test` 合约的部署，构造函数的第一个参数设置为 11。该合约依赖于一个库。 这个库的关联引用是用属性 `linkReferences` 来指定的。 在这种情况下，我们会使用之前创建的库的地址：`created{1512830014773}` 。 这个数字是创建这个库的交易的 id(时间戳)。"

#: ../../run.md:195
msgid "The third record corresponds to the call to the function `set` of the contract `test` (the property to is set to: `created{1512830015080}`) . Input parameters are `1` and `0xca35b7d915458ef540ade6068dfe2f44e8fa733c`"
msgstr "第三笔交易对应 `test` 合约的 `set` 函数的调用(属性 to 设置为：`created{1512830015080}`)。 输入参数为 `1` 和 `0xca35b7d915458ef540ade6068dfe2f44e8fa733c`"

#: ../../run.md:200
msgid "All these transactions are created using the value of the accounts `account{0}`."
msgstr "所有这些交易都是用账户 `account{0}` 的以太币来创建的。"

